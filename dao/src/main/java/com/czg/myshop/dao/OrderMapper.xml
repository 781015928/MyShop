<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.czg.myshop.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.czg.myshop.model.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="address_id" property="addressId" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="VARCHAR" />
    <result column="updatetime" property="updatetime" jdbcType="VARCHAR" />
    <result column="deletestate" property="deletestate" jdbcType="INTEGER" />
    <result column="product_spec_id" property="productSpecId" jdbcType="INTEGER" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="REAL" />
    <result column="unit_price" property="unitPrice" jdbcType="REAL" />
    <result column="pay_state" property="payState" jdbcType="INTEGER" />
    <result column="logistics_state" property="logisticsState" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="after_service_state" property="afterServiceState" jdbcType="INTEGER" />
    <result column="logistics_id" property="logisticsId" jdbcType="INTEGER" />
    <result column="cash_id" property="cashId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, uid, address_id, product_id, createtime, updatetime, deletestate, product_spec_id, 
    count, price, unit_price, pay_state, logistics_state, state, after_service_state, 
    logistics_id, cash_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.czg.myshop.model.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.czg.myshop.model.OrderExample" >
    delete from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.czg.myshop.model.Order" >
    insert into t_order (id, uid, address_id, 
      product_id, createtime, updatetime, 
      deletestate, product_spec_id, count, 
      price, unit_price, pay_state, 
      logistics_state, state, after_service_state, 
      logistics_id, cash_id)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{addressId,jdbcType=INTEGER}, 
      #{productId,jdbcType=INTEGER}, #{createtime,jdbcType=VARCHAR}, #{updatetime,jdbcType=VARCHAR}, 
      #{deletestate,jdbcType=INTEGER}, #{productSpecId,jdbcType=INTEGER}, #{count,jdbcType=INTEGER}, 
      #{price,jdbcType=REAL}, #{unitPrice,jdbcType=REAL}, #{payState,jdbcType=INTEGER}, 
      #{logisticsState,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{afterServiceState,jdbcType=INTEGER}, 
      #{logisticsId,jdbcType=INTEGER}, #{cashId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.czg.myshop.model.Order" >
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="addressId != null" >
        address_id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="deletestate != null" >
        deletestate,
      </if>
      <if test="productSpecId != null" >
        product_spec_id,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="unitPrice != null" >
        unit_price,
      </if>
      <if test="payState != null" >
        pay_state,
      </if>
      <if test="logisticsState != null" >
        logistics_state,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="afterServiceState != null" >
        after_service_state,
      </if>
      <if test="logisticsId != null" >
        logistics_id,
      </if>
      <if test="cashId != null" >
        cash_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="addressId != null" >
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=VARCHAR},
      </if>
      <if test="deletestate != null" >
        #{deletestate,jdbcType=INTEGER},
      </if>
      <if test="productSpecId != null" >
        #{productSpecId,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=REAL},
      </if>
      <if test="unitPrice != null" >
        #{unitPrice,jdbcType=REAL},
      </if>
      <if test="payState != null" >
        #{payState,jdbcType=INTEGER},
      </if>
      <if test="logisticsState != null" >
        #{logisticsState,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="afterServiceState != null" >
        #{afterServiceState,jdbcType=INTEGER},
      </if>
      <if test="logisticsId != null" >
        #{logisticsId,jdbcType=INTEGER},
      </if>
      <if test="cashId != null" >
        #{cashId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.czg.myshop.model.OrderExample" resultType="java.lang.Integer" >
    select count(*) from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.addressId != null" >
        address_id = #{record.addressId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=VARCHAR},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=VARCHAR},
      </if>
      <if test="record.deletestate != null" >
        deletestate = #{record.deletestate,jdbcType=INTEGER},
      </if>
      <if test="record.productSpecId != null" >
        product_spec_id = #{record.productSpecId,jdbcType=INTEGER},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.unitPrice != null" >
        unit_price = #{record.unitPrice,jdbcType=REAL},
      </if>
      <if test="record.payState != null" >
        pay_state = #{record.payState,jdbcType=INTEGER},
      </if>
      <if test="record.logisticsState != null" >
        logistics_state = #{record.logisticsState,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.afterServiceState != null" >
        after_service_state = #{record.afterServiceState,jdbcType=INTEGER},
      </if>
      <if test="record.logisticsId != null" >
        logistics_id = #{record.logisticsId,jdbcType=INTEGER},
      </if>
      <if test="record.cashId != null" >
        cash_id = #{record.cashId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_order
    set id = #{record.id,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      address_id = #{record.addressId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=VARCHAR},
      updatetime = #{record.updatetime,jdbcType=VARCHAR},
      deletestate = #{record.deletestate,jdbcType=INTEGER},
      product_spec_id = #{record.productSpecId,jdbcType=INTEGER},
      count = #{record.count,jdbcType=INTEGER},
      price = #{record.price,jdbcType=REAL},
      unit_price = #{record.unitPrice,jdbcType=REAL},
      pay_state = #{record.payState,jdbcType=INTEGER},
      logistics_state = #{record.logisticsState,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      after_service_state = #{record.afterServiceState,jdbcType=INTEGER},
      logistics_id = #{record.logisticsId,jdbcType=INTEGER},
      cash_id = #{record.cashId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.czg.myshop.model.Order" >
    update t_order
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="addressId != null" >
        address_id = #{addressId,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=VARCHAR},
      </if>
      <if test="deletestate != null" >
        deletestate = #{deletestate,jdbcType=INTEGER},
      </if>
      <if test="productSpecId != null" >
        product_spec_id = #{productSpecId,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=REAL},
      </if>
      <if test="unitPrice != null" >
        unit_price = #{unitPrice,jdbcType=REAL},
      </if>
      <if test="payState != null" >
        pay_state = #{payState,jdbcType=INTEGER},
      </if>
      <if test="logisticsState != null" >
        logistics_state = #{logisticsState,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="afterServiceState != null" >
        after_service_state = #{afterServiceState,jdbcType=INTEGER},
      </if>
      <if test="logisticsId != null" >
        logistics_id = #{logisticsId,jdbcType=INTEGER},
      </if>
      <if test="cashId != null" >
        cash_id = #{cashId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.czg.myshop.model.Order" >
    update t_order
    set uid = #{uid,jdbcType=INTEGER},
      address_id = #{addressId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=VARCHAR},
      updatetime = #{updatetime,jdbcType=VARCHAR},
      deletestate = #{deletestate,jdbcType=INTEGER},
      product_spec_id = #{productSpecId,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER},
      price = #{price,jdbcType=REAL},
      unit_price = #{unitPrice,jdbcType=REAL},
      pay_state = #{payState,jdbcType=INTEGER},
      logistics_state = #{logisticsState,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      after_service_state = #{afterServiceState,jdbcType=INTEGER},
      logistics_id = #{logisticsId,jdbcType=INTEGER},
      cash_id = #{cashId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>